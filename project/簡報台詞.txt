1. 一年觀測資料-本局屬地面測站一年觀測資料
包含測站名、測站ID、詳細的氣象觀測資料
氣象局只有提供一年份每天的資料
我們怕資料量太少
因此還有找另一個資料來做統計

2. 每日雨量-過去9年局屬地面測站每日雨量資料
這個table有最近九年每天的資料、但是只有雨量的資料
會不會下雨對於出門遊玩影響很大
所以有使用這個table

3. 景點 - 觀光資訊資料庫
裡面有35個column
有景點的詳細資料、包含營業時間、票價資訊等
全部有5000多個景點
這次網站沒有做使用者可以插入新的景點
原因是我們找到的這個資料庫的id不是單純的數字
使用者插入新資料時
景點id很難自動給出一個可以用的id

4.氣象站資訊
這個是從網路上找到相關的資料
再手動輸入
目的是為了連結不同的table
景點的table有那個景點的經緯度資料
兩個有關氣象的資料都只有測站名稱、id
沒有經緯度的資訊
所以我們建了一個table把這三個table串聯起來

5.留言板
這個是我們自己設計的table
可以記錄留言的相關資訊
place可以用來和景點table做比對
如果想留言的景點沒有在名稱一模一樣的景點在資料庫裡，那就不能留言
有評分的欄位
user對景點的平均評分會在搜尋景點時和天氣資訊一起顯示出來
另外可以儲存空氣品質好壞、天氣好壞可以提供參考


動機
當要提前好幾個月安排出遠門的行程時
我們很難去預測天氣
因此我們建立這個網站
可以提供規劃時做參考
裡面包含5000多個景點的詳細資訊
天氣資訊
還有使用者給出的評分、天氣、空氣好壞資訊
Ex1.小明計畫春節時出遊，請問1月時去哪裡比較不會下雨？
Ex2.小王有氣喘過敏的症狀，請問暑假出遊去哪個地區為佳？

Sql
這部分是用搜尋的天氣條件找出符合的測站，找出以這些測站為最近測站的景點

Application
我們的網站主要分成三部分
第一部分是以縣市或景點名稱、關鍵字來搜尋景點
用過去九年每天的降雨資料算出某日期前後三天的降雨機率、平均降雨量
用過去一年的觀測資料算出某日期前後九天的平均溫度、平均相對濕度、平均風速
找出離景點最近的兩個測站，平均的部分已最近的測站為主（七成）、第二近的測站為輔（三成）
第二部分是以日期與各種天氣條件（溫度、濕度、降雨、日照）去篩選景點
第三部分是留言板的功能
可以用地點搜尋留言，也可對留言進行編輯、刪除等

開發過程
安裝XAMPP 
啟動 Apache web server 與 MySQL server 
下載政府的開放資料並透過python等程式語言整理資料以利使用 
透過phpMyAdmin建立database，匯入處理好的資料 撰寫sql 
在XAMPP架構下用html和php建構前端與後端，再用mysqli把sql嵌入php裡面

學到的事
合作
因為疫情的關係需要遠距交流，所以我們學會如何在這樣的情況下聯繫彼此並完成網站，大家需要互相幫助才能突破瓶頸，而遠距讓溝通顯得更為必要
架網站
我們從一開始連前端後端都不知道，到後來能架出一個簡單的網站，是靠大家一起努力學習，分享資訊